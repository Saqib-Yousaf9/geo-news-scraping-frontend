{"ast":null,"code":"var _jsxFileName = \"D:\\\\geo\\\\my-app\\\\frontend\\\\src\\\\components\\\\NAPChart.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Legend, Title, Filler } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend, Title, Filler);\nfunction NAPChart({\n  data\n}) {\n  if (!Array.isArray(data)) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No data format\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 36\n  }, this);\n  const nameCounts = data.reduce((acc, item) => {\n    if (item.name) {\n      acc[item.name] = (acc[item.name] || 0) + 1;\n    }\n    return acc;\n  }, {});\n  const chartData = {\n    labels: Object.keys(nameCounts),\n    datasets: [{\n      label: 'Count of Names',\n      data: Object.values(nameCounts),\n      backgroundColor: 'rgba(75,192,192,0.6)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'NAP Data Overview'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: chartData,\n    options: chartOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n}\n_c = NAPChart;\nexport default NAPChart;\nvar _c;\n$RefreshReg$(_c, \"NAPChart\");","map":{"version":3,"names":["React","Bar","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Tooltip","Legend","Title","Filler","jsxDEV","_jsxDEV","register","NAPChart","data","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","nameCounts","reduce","acc","item","name","chartData","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","chartOptions","responsive","plugins","legend","position","title","display","text","options","_c","$RefreshReg$"],"sources":["D:/geo/my-app/frontend/src/components/NAPChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend,\r\n  Title,\r\n  Filler\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend,\r\n  Title,\r\n  Filler\r\n);\r\n\r\nfunction NAPChart({ data }) {\r\n  if (!Array.isArray(data)) return <p>No data format</p>;\r\n\r\n  const nameCounts = data.reduce((acc, item) => {\r\n    if (item.name) {\r\n      acc[item.name] = (acc[item.name] || 0) + 1;\r\n    }\r\n    return acc;\r\n  }, {});\r\n\r\n  const chartData = {\r\n    labels: Object.keys(nameCounts),\r\n    datasets: [\r\n      {\r\n        label: 'Count of Names',\r\n        data: Object.values(nameCounts),\r\n        backgroundColor: 'rgba(75,192,192,0.6)',\r\n        borderColor: 'rgba(75,192,192,1)',\r\n        borderWidth: 1\r\n      }\r\n    ]\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'NAP Data Overview'\r\n      }\r\n    }\r\n  };\r\n\r\n  return <Bar data={chartData} options={chartOptions} />;\r\n}\r\n\r\nexport default NAPChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACEC,KAAK,IAAIC,OAAO,EAChBC,UAAU,EACVC,aAAa,EACbC,WAAW,EACXC,OAAO,EACPC,MAAM,EACNC,KAAK,EACLC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBT,OAAO,CAACU,QAAQ,CACdT,UAAU,EACVC,aAAa,EACbC,WAAW,EACXC,OAAO,EACPC,MAAM,EACNC,KAAK,EACLC,MACF,CAAC;AAED,SAASI,QAAQA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC1B,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE,oBAAOH,OAAA;IAAAM,QAAA,EAAG;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEtD,MAAMC,UAAU,GAAGR,IAAI,CAACS,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IAC5C,IAAIA,IAAI,CAACC,IAAI,EAAE;MACbF,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,GAAG,CAACF,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAC5C;IACA,OAAOF,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,MAAMG,SAAS,GAAG;IAChBC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACR,UAAU,CAAC;IAC/BS,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,gBAAgB;MACvBlB,IAAI,EAAEe,MAAM,CAACI,MAAM,CAACX,UAAU,CAAC;MAC/BY,eAAe,EAAE,sBAAsB;MACvCC,WAAW,EAAE,oBAAoB;MACjCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,oBAAOjC,OAAA,CAACX,GAAG;IAACc,IAAI,EAAEa,SAAU;IAACkB,OAAO,EAAER;EAAa;IAAAnB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxD;AAACyB,EAAA,GArCQjC,QAAQ;AAuCjB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}