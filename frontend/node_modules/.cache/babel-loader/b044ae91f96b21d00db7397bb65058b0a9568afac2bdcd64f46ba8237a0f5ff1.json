{"ast":null,"code":"var _jsxFileName = \"D:\\\\geo\\\\my-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport NAPChart from './components/NAPChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [napData, setNapData] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/nap').then(response => setNapData(response.data)).catch(error => console.error('Fetch error:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NAP Data Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), Array.isArray(napData) && napData.length > 0 ? /*#__PURE__*/_jsxDEV(NAPChart, {\n      data: napData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading or no data available...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aNMo/jUh8FR6XJSdI+BL8iesnig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","NAPChart","jsxDEV","_jsxDEV","App","_s","napData","setNapData","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","_c","$RefreshReg$"],"sources":["D:/geo/my-app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport NAPChart from './components/NAPChart';\n\nfunction App() {\n  const [napData, setNapData] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/nap')\n      .then(response => setNapData(response.data))\n      .catch(error => console.error('Fetch error:', error));\n  }, []);\n\n  return (\n    <div>\n      <h1>NAP Data Visualization</h1>\n      {Array.isArray(napData) && napData.length > 0 ? (\n        <NAPChart data={napData} />\n      ) : (\n        <p>Loading or no data available...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACQ,GAAG,CAAC,+BAA+B,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAIH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC,CAAC;EACzD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BC,KAAK,CAACC,OAAO,CAACf,OAAO,CAAC,IAAIA,OAAO,CAACgB,MAAM,GAAG,CAAC,gBAC3CnB,OAAA,CAACF,QAAQ;MAACU,IAAI,EAAEL;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE3BhB,OAAA;MAAAY,QAAA,EAAG;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACd,EAAA,CAnBQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}